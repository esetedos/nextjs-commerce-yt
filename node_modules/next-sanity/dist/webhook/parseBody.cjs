"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@sanity/webhook"),r=require("./readBody.cjs");async function t(r,t){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const n=r.headers.get(e.SIGNATURE_HEADER_NAME);if(!n)return console.error("Missing signature header"),{body:null,isValidSignature:null};const a=await r.text(),o=t?await e.isValidSignature(a,n,t.trim()):null;return!1!==o&&i&&await new Promise((e=>setTimeout(e,3e3))),{body:a.trim()?JSON.parse(a):null,isValidSignature:o}}exports.parseAppBody=t,exports.parseBody=async function(i,n){let a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return"text"in i?t(i,n,a):async function(t,i){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=t.headers[e.SIGNATURE_HEADER_NAME];Array.isArray(a)&&(a=a[0]);if(!a)return console.error("Missing signature header"),{body:null,isValidSignature:null};if(t.readableEnded)throw new Error("Request already ended and the POST body can't be read. Have you setup `export {config} from 'next-sanity/webhook' in your webhook API handler?`");const o=await r._readBody(t),s=i?await e.isValidSignature(o,a,i.trim()):null;!1!==s&&n&&await new Promise((e=>setTimeout(e,1e3)));return{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}(i,n,a)};
//# sourceMappingURL=parseBody.cjs.map
