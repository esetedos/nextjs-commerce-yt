import{isValidSignature as e,SIGNATURE_HEADER_NAME as r}from"@sanity/webhook";import{_readBody as t}from"./readBody.js";async function n(n,a){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return"text"in n?i(n,a,o):async function(n,i){let a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],o=n.headers[r];Array.isArray(o)&&(o=o[0]);if(!o)return console.error("Missing signature header"),{body:null,isValidSignature:null};if(n.readableEnded)throw new Error("Request already ended and the POST body can't be read. Have you setup `export {config} from 'next-sanity/webhook' in your webhook API handler?`");const s=await t(n),l=i?await e(s,o,i.trim()):null;!1!==l&&a&&await new Promise((e=>setTimeout(e,1e3)));return{body:s.trim()?JSON.parse(s):null,isValidSignature:l}}(n,a,o)}async function i(t,n){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=t.headers.get(r);if(!a)return console.error("Missing signature header"),{body:null,isValidSignature:null};const o=await t.text(),s=n?await e(o,a,n.trim()):null;return!1!==s&&i&&await new Promise((e=>setTimeout(e,3e3))),{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}export{i as parseAppBody,n as parseBody};
//# sourceMappingURL=parseBody.js.map
