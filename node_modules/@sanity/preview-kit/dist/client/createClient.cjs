"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@sanity/client"),r=require("@sanity/client/stega");function t(){try{return"true"===(void 0).SANITY_SOURCE_MAP}catch{}try{return"true"===process.env.SANITY_SOURCE_MAP}catch{}return!1}function n(){try{return(void 0).SANITY_STUDIO_URL}catch{}try{return process.env.SANITY_STUDIO_URL}catch{}}exports.createClient=o=>{var a,c;const{encodeSourceMap:i=t(),encodeSourceMapAtPath:l,studioUrl:u=n(),logger:s,...d}=o;let p=!0===i;if("auto"===i&&(p=function(){try{return"preview"===(void 0).VERCEL_ENV}catch{}try{return"preview"===process.env.VERCEL_ENV}catch{}return!1}()),"string"==typeof i&&"auto"!==i)throw new Error("Invalid value for encodeSourceMap: ".concat(i,". Did you mean 'auto'?"));try{if(p&&!1!==o.resultSourceMap)return u?(null==(c=null==s?void 0:s.debug)||c.call(s,"[@sanity/preview-kit]: Creating source map enabled client"),r.createClient({...d,resultSourceMap:o.resultSourceMap?o.resultSourceMap:"withKeyArraySelector",stega:{enabled:!0,studioUrl:u,logger:s,filter:l?e=>l({path:e.sourcePath,filterDefault:()=>e.filterDefault(e)}):void 0}})):(null==(a=null==s?void 0:s.error)||a.call(s,"[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client"),e.createClient(d))}catch(e){console.error("[@sanity/preview-kit]: Error creating client",e,"falling back to non-embedded sourcemap mode")}return e.createClient(d)};
//# sourceMappingURL=createClient.cjs.map
