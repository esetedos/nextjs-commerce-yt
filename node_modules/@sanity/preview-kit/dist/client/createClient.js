import{createClient as e}from"@sanity/client";import{createClient as t}from"@sanity/client/stega";const r=r=>{var a,c;const{encodeSourceMap:i=n(),encodeSourceMapAtPath:l,studioUrl:u=o(),logger:s,...p}=r;let d=!0===i;if("auto"===i&&(d=function(){try{return"preview"===import.meta.env.VERCEL_ENV}catch{}try{return"preview"===process.env.VERCEL_ENV}catch{}return!1}()),"string"==typeof i&&"auto"!==i)throw new Error("Invalid value for encodeSourceMap: ".concat(i,". Did you mean 'auto'?"));try{if(d&&!1!==r.resultSourceMap)return u?(null==(c=null==s?void 0:s.debug)||c.call(s,"[@sanity/preview-kit]: Creating source map enabled client"),t({...p,resultSourceMap:r.resultSourceMap?r.resultSourceMap:"withKeyArraySelector",stega:{enabled:!0,studioUrl:u,logger:s,filter:l?e=>l({path:e.sourcePath,filterDefault:()=>e.filterDefault(e)}):void 0}})):(null==(a=null==s?void 0:s.error)||a.call(s,"[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client"),e(p))}catch(e){console.error("[@sanity/preview-kit]: Error creating client",e,"falling back to non-embedded sourcemap mode")}return e(p)};function n(){try{return"true"===import.meta.env.SANITY_SOURCE_MAP}catch{}try{return"true"===process.env.SANITY_SOURCE_MAP}catch{}return!1}function o(){try{return import.meta.env.SANITY_STUDIO_URL}catch{}try{return process.env.SANITY_STUDIO_URL}catch{}}export{r as createClient};
//# sourceMappingURL=createClient.js.map
